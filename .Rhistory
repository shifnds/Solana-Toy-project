# Solana - POS select validator
set.seed(123) 

Validator <- setRefClass("Validator",
                         fields = list(name = "character", stake = "numeric"),
                         methods = list(
                           try_produce_block = function() {
                             block_chance <- stake / 10000
                             return(runif(1) < block_chance)
                           }
                         ))

validators <- list(
  Validator$new(name = "A", stake = 1000),
  Validator$new(name = "B", stake = 7000),
  Validator$new(name = "C", stake = 2000)
)

for (epoch in 1:5) {
  cat(sprintf("Epoch %d\n", epoch))
  for (validator in validators) {
    if (validator$try_produce_block()) {
      cat(sprintf("  %s produced a block!\n", validator$name))
    }
  }
}

# Solana - Simulated transaction information input and generated hash value

if (!requireNamespace("digest", quietly = TRUE)) {
    install.packages("digest")
}
library(digest)

get_transaction_input <- function() {
  from_account <- readline(prompt = "Enter the sender's account: ")
  to_account <- readline(prompt = "Enter the recipient's account: ")
  amount <- readline(prompt = "Enter the amount: ")
  transaction_info <- paste(from_account, to_account, amount, sep = "|")
  return(transaction_info)
}

generate_transaction_hash <- function(transaction_info) {
  transaction_hash <- digest(transaction_info, algo = "sha256", serialize = FALSE)
  return(transaction_hash)
}

main <- function() {
  transaction_info <- get_transaction_input()
  transaction_hash <- generate_transaction_hash(transaction_info)
  cat(sprintf("Generated Transaction Hash: %s\n", transaction_hash))
}

main()